{"version":3,"sources":["Books/pages/CreateSubject.js"],"names":["CreateSubject","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","classid","useParams","cid","useForm","subjectName","value","isValid","image","formState","InputHandler","history","useHistory","subjectSubmitHandler","event","a","preventDefault","formData","FormData","append","inputs","process","push","window","location","reload","Fragment","onClear","className","onSubmit","asOverlay","id","element","type","label","validators","VALIDATOR_MINLENGTH","errorText","onInput","center","disabled"],"mappings":"gRAiFeA,UA/DO,WACLC,qBAAWC,KAAxB,IADwB,EAE8BC,cAA9CC,EAFgB,EAEhBA,UAAWC,EAFK,EAELA,MAAOC,EAFF,EAEEA,YAAaC,EAFf,EAEeA,WACjCC,EAAUC,cAAYC,IAHJ,EAKUC,YAC9B,CACIC,YAAa,CACTC,MAAO,GACPC,SAAS,GAEbC,MAAO,CACHF,MAAO,KACPC,SAAS,KAGjB,GAhBoB,mBAKlBE,EALkB,KAKPC,EALO,KAmBtBC,EAAUC,cAIVC,EAAoB,uCAAG,WAAMC,GAAN,eAAAC,EAAA,6DACzBD,EAAME,iBADmB,UAGnBC,EAAW,IAAIC,UACZC,OAAO,UAAWlB,GAC3BgB,EAASE,OAAO,QAASV,EAAUW,OAAOZ,MAAMF,OAChDW,EAASE,OAAO,cAAeV,EAAUW,OAAOf,YAAYC,OANnC,SAOhBP,EAAY,GAAD,OAAIsB,8DAAJ,wBAA6D,OAAQJ,GAPhE,OAU7BN,EAAQW,KAAR,iBAAuBrB,IACvBsB,OAAOC,SAASC,QAAO,GAXM,4GAAH,sDAiBtB,OACI,kBAAC,IAAMC,SAAP,KACA,kBAAC,IAAD,CAAY5B,MAAOA,EAAO6B,QAAS3B,IACvC,0BAAM4B,UAAU,aAAcC,SAAUhB,GACnChB,GAAa,kBAAC,IAAD,CAAgBiC,WAAS,IACvC,kBAAC,IAAD,CACAC,GAAG,cACHC,QAAQ,QACRC,KAAK,OACLC,MAAM,eACNC,WAAY,CAACC,YAAoB,IACjCC,UAAU,qCACVC,QAAS5B,IAEhB,kBAAC,IAAD,CAAa6B,QAAM,EAACR,GAAG,QAAQO,QAAS5B,IAGjC,kBAAC,IAAD,CAAQuB,KAAK,SAASO,UAAW/B,EAAUF,SAA3C","file":"static/js/9.943a87d9.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient }  from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport ImageUpload from '../../shared/components/FormElements/imageUpload';\r\nimport ImaUpload from '../../shared/components/FormElements/pdfUpload';\r\n\r\nimport './PlaceForm.css';\r\n//mport { useParams } from 'react-router-dom';\r\n\r\n\r\n\r\nconst CreateSubject = () => {\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const classid = useParams().cid;\r\n\r\n   const [formState, InputHandler] =  useForm(\r\n        {\r\n            subjectName: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            image: {\r\n                value: null,\r\n                isValid: false\r\n            }\r\n        }, \r\n        false\r\n    );\r\n\r\nconst history = useHistory();\r\n  \r\n\r\n\r\nconst subjectSubmitHandler = async event => {\r\n    event.preventDefault();\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append('classNo', classid);\r\n    formData.append('image', formState.inputs.image.value);\r\n    formData.append('subjectName', formState.inputs.subjectName.value);\r\n       await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/books/createSubject`, 'POST', formData);\r\n\r\n// Redirect the  user to a different page\r\nhistory.push(`/books/${classid}`);\r\nwindow.location.reload(false);\r\n\r\n} catch (err) {}\r\n   \r\n};\r\n\r\n    return(  \r\n        <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n    <form className=\"place-form\"  onSubmit={subjectSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input \r\n        id=\"subjectName\"\r\n        element=\"input\" \r\n        type=\"text\" \r\n        label=\"Subject Name\" \r\n        validators={[VALIDATOR_MINLENGTH(1)]} \r\n        errorText=\"Please enter a valid Subject Name.\" \r\n        onInput={InputHandler}\r\n        />\r\n <ImageUpload center id=\"image\" onInput={InputHandler} />\r\n \r\n \r\n        <Button type=\"submit\" disabled={!formState.isValid}>ADD SUBJECT</Button>\r\n    </form>\r\n    </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default CreateSubject;"],"sourceRoot":""}