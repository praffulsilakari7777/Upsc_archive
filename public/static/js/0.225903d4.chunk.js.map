{"version":3,"sources":["shared/components/UIElements/Card1.js","../node_modules/@material-ui/icons/Favorite.js","Books/components/ChapterItem.js","Books/components/ChapterList.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js"],"names":["makeStyles","root","maxWidth","media","height","_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","createElement","d","useStyles","theme","button","margin","spacing","extendedIcon","marginRight","ChapterItem","props","React","useState","open","setOpen","handleClose","open1","setOpen1","handleClose1","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","showMap","setShowMap","UserBooksBoolean","setUserBooksBoolean","setShowConfirmModal","user","userId","role","console","log","useEffect","a","process","id","JSON","stringify","userBooksHandler","openMapHandler","event","preventDefault","closeMapHandler","confirmDeleteHandler","confirmDeleteHandler1","window","location","reload","onDelete","Fragment","ErrorModal","onClear","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","onClick","color","autoFocus","keywords","name","content","descriptionKeywords","className","Card","LoadingSpinner","asOverlay","IconButton","aria-label","size","src","image","alt","chapterName","title","Typography","variant","component","description","Button","inverse","to","creatorId","danger","ChapterList","items","length","map","item","async","chapter","key","_id","chapterNumber","chapterLink","ref","classes","_props$raised","raised","other","elevation","overflow","CardActionArea","children","focusVisibleClassName","focusVisible","focusHighlight","display","textAlign","width","opacity","palette","action","hoverOpacity","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","short","MEDIA_COMPONENTS","CardMedia","_props$component","Component","style","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","img","undefined","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","CardContent","padding","paddingBottom","CardActions","_props$disableSpacing","disableSpacing","alignItems","marginLeft"],"mappings":"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","file":"static/js/0.225903d4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 445,\r\n  },\r\n  media: {\r\n    height: 240,\r\n  },\r\n});\r\n\r\nconst Card1 = () =>\r\n{\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image=\"https://lh3.googleusercontent.com/proxy/zp5i5fvIGnjh9Pe9_EInJNRCvqmrA-PN82CnyRGwAmKkznsjzGIRbTmOMyZLJhOMhZPyEt_p7lsGwHs2ZNChJcLlK2fVmu4QGFK1ULB5PeTy9HXDHi_HdVJV6G8jFJPe9zHgYyY\"\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Chemistry\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          The NCERT solutions provided here will enhance the concepts of the students, as well as suggest alternative methods to solve particular problems to the teachers. The target is to direct individuals towards problem solving strategies, rather than solving problems in one prescribed format. The links below provide the detailed solutions for all the Class 12 Chemistry problems.\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Card1;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n}), 'Favorite');\n\nexports.default = _default;","import React, { useState, useContext, useEffect } from 'react';\r\n\r\nimport Skeleton from 'react-loading-skeleton';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Card1 from '../../shared/components/UIElements/Card1';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport Modal from '../../shared/components/UIElements/Modal';\r\nimport { AuthCotext, AuthContext } from '../../shared/context/auth-context';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { useAuth } from '../../shared/hooks/auth-hook';\r\n\r\nimport './ChapterItem.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button1 from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { common } from '@material-ui/core/colors';\r\nimport {Helmet, HelmetProvider} from 'react-helmet-async';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\n\r\nconst ChapterItem = props => {\r\n\r\n\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n    const [open1, setOpen1] = React.useState(false);\r\n    const handleClickOpen1 = () => {\r\n        setOpen1(true);\r\n      };\r\n    \r\n      const handleClose1 = () => {\r\n        setOpen1(false);\r\n      };\r\n    \r\n\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n    const [showMap, setShowMap] = useState(false);\r\n    const [UserBooksBoolean, setUserBooksBoolean] = useState(false);\r\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n    const user = auth.userId;\r\n    const role = auth.role;\r\n    console.log(role);\r\n\r\n\r\n\r\n\r\nlet ans;\r\nlet ans1;\r\n    \r\n\r\n   useEffect(() => {\r\n \r\n     if(user) {\r\n    const userBooksHandler = async () => {\r\n    try {\r\n       \r\n      ans =  await sendRequest(process.env.REACT_APP_BACKEND_URL + `/books/user/userbooks/${props.id}`, 'POST', JSON.stringify({\r\n            user: user\r\n    }), \r\n    { 'Content-Type': 'application/json' }\r\n    );\r\n\r\n   if(ans)\r\n    setUserBooksBoolean(true);\r\n    \r\n} catch (err) {}\r\n    };\r\n    userBooksHandler();\r\n}\r\n  }, [sendRequest], user);\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n    const openMapHandler  = async event => {\r\n        event.preventDefault();\r\n      try {\r\n           await sendRequest(process.env.REACT_APP_BACKEND_URL + `/books/createUserBooks/${props.id}`, 'POST', JSON.stringify({\r\n            user: user\r\n    }), \r\n    { 'Content-Type': 'application/json' }\r\n    );\r\n    \r\n    // Redirect the  user to a different page\r\n    setShowMap(true);\r\n\r\n    } catch (err) {}\r\n\r\n\r\n\r\n\r\n        try {\r\n         ans1 =   await sendRequest(process.env.REACT_APP_BACKEND_URL + `/books/user/userbooks/${props.id}`, 'POST', JSON.stringify({\r\n             user: user\r\n     }), \r\n     { 'Content-Type': 'application/json' }\r\n     );\r\n\r\n     if(ans1)\r\n     setUserBooksBoolean(true);\r\n    \r\n    } catch (err) {}\r\n\r\n    \r\n       \r\n    };\r\n\r\n\r\n\r\n    const closeMapHandler = () => setShowMap(false);\r\n    \r\n    const showDeleteWarningHandler = () => {\r\n        setShowConfirmModal(true);\r\n\r\n    };\r\n\r\n    const cancelDeleteHandler = () => {\r\n        setShowConfirmModal(false);\r\n    };\r\n\r\n    const confirmDeleteHandler =  async () => {\r\n        setShowConfirmModal(false);\r\n        setOpen(false);\r\n        try {\r\n             await sendRequest(process.env.REACT_APP_BACKEND_URL + `/books/deleteuserbooks/${props.id}`, 'POST', JSON.stringify({\r\n            user: user\r\n        }), \r\n        { 'Content-Type': 'application/json' }\r\n        );\r\n   \r\n       \r\n        setUserBooksBoolean(false);\r\n        \r\n\r\n       } catch (err) {}\r\n   \r\n    };\r\n\r\n\r\n\r\n    \r\n    const confirmDeleteHandler1 =  async () => {\r\n     \r\n      setOpen1(false);\r\n      try {\r\n        await sendRequest(process.env.REACT_APP_BACKEND_URL + `/books/deleteChapter/${props.id}`, 'DELETE');\r\n        window.location.reload(false);\r\n        props.onDelete(props.id);\r\n \r\n  \r\n     } catch (err) {}\r\n \r\n  };\r\n\r\n//   let Urlkeyword='';\r\n//     {props.items.map(function(item) {\r\n//       Urlkeywords+='-';\r\n// Urlkeywords+=item.chapterName;\r\n// descriptionKeywords+=', ';\r\n// descriptionKeywords+=item.description;\r\n\r\n// })};\r\n\r\n    return (\r\n    <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        <Dialog open={showMap} onClose={closeMapHandler} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Sucsses\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n          Book Added to Downloads Sucssfully!\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button1 onClick={closeMapHandler} color=\"primary\">\r\n            Close\r\n          </Button1>\r\n        </DialogActions>\r\n      </Dialog>\r\n         {/* <Modal \r\n         show={showMap} \r\n         onCancel={closeMapHandler} \r\n         header={props.address}\r\n         contentClass=\"place-item__modal-content\" \r\n         footerClass=\"place-item__modal-actions\"\r\n         footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n         >\r\n\r\n             <div className=\"map-container\">\r\n                 <h2>Book Added to Downloads Sucssfully!</h2>\r\n             </div>\r\n        </Modal> */}\r\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Do you want to proceed and delete this place?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n          Please note that it can't be undone thereafter.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button1 onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button1>\r\n          <Button1 onClick={confirmDeleteHandler} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button1>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n\r\n      <Dialog open={open1} onClose={handleClose1} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Do you want to proceed and delete this place?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n          Please note that it can't be undone thereafter.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button1 onClick={handleClose1} color=\"primary\">\r\n            Disagree\r\n          </Button1>\r\n          <Button1 onClick={confirmDeleteHandler1} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button1>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n\r\n        {/* <Modal\r\n          show={showConfirmModal}\r\n          onCancel={cancelDeleteHandler}\r\n          header=\"Are You sure?\"\r\n          footerClass=\"place-item__modal-actions\" \r\n          footer={\r\n              <React.Fragment>\r\n                  <Button inverse onClick={cancelDeleteHandler}>CANCEL</Button>\r\n                  <Button danger onClick={confirmDeleteHandler}>DELETE</Button>\r\n              </React.Fragment>\r\n          }\r\n        >\r\n            <p>Do you want to proceed and delete this book?</p>\r\n        </Modal> */}\r\n        <text></text>\r\n        <HelmetProvider>\r\n        <Helmet>\r\n        <title>Ncert Books | Solutions | PDF Downloads For Free | {props.keywords}</title>\r\n        <meta\r\n          name=\"keywords\"\r\n          content={props.keywords}\r\n                  />\r\n        <meta\r\n          name=\"description\"\r\n          content={props.descriptionKeywords}\r\n                  />\r\n         </Helmet>\r\n         </HelmetProvider>\r\n    <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n             {/* {UserBooksBoolean?<Button danger onClick={showDeleteWarningHandler}>Delete</Button>: <Button inverse onClick={openMapHandler}>Add to Downloads</Button>} */}\r\n             {UserBooksBoolean?<IconButton aria-label=\"add to favorites\" color=\"primary\" size=\"large\">\r\n          <FavoriteIcon onClick={handleClickOpen}  />\r\n        </IconButton>: <IconButton aria-label=\"add to favorites\" color=\"default\" size=\"large\">\r\n          <FavoriteIcon onClick={openMapHandler}  />\r\n        </IconButton>}\r\n        <div className=\"place-item__image\">\r\n          \r\n            <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}  alt={props.chapterName} title={props.chapterName} />\r\n        </div>\r\n        <div className=\"place-item__info\">\r\n       <h1><b><Typography  variant=\"body1\" color=\"textPrimary\" component=\"h3\">{props.chapterName}</Typography></b></h1>\r\n        <Typography  variant=\"body1\" color=\"textPrimary\" component=\"h4\">{`Chapter ${props.title}`}</Typography>\r\n        <h1><Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{props.description}</Typography></h1>\r\n        </div>\r\n        <div className=\"place-item__actions\">\r\n            {/* {UserBooksBoolean?<Button danger onClick={showDeleteWarningHandler}>Delete</Button>: <Button inverse onClick={openMapHandler}>Add to Downloads</Button>}\r\n            {UserBooksBoolean?<IconButton aria-label=\"add to favorites\" color=\"primary\" size=\"large\">\r\n          <FavoriteIcon onClick={handleClickOpen}  />\r\n        </IconButton>: <IconButton aria-label=\"add to favorites\" color=\"default\" size=\"large\">\r\n          <FavoriteIcon onClick={openMapHandler}  />\r\n        </IconButton>} */}\r\n    \r\n            <Button size=\"small\" inverse to={`/pdf/${props.id}`}>View Chapter</Button>\r\n            <Button size=\"small\" inverse to={`/pdfsol/${props.id}`}>View Solution</Button>\r\n            {/* <Button size=\"small\" inverse to={`/pdf/${props.id}`}>Video</Button> */}\r\n            {auth.userId === props.creatorId && <Button to={`/places/${props.id}`}>Edit</Button>}\r\n            { auth.role === 'admin'  && <Button to={`/books/updatechapter/${props.id}`}>Edit</Button>}\r\n            { auth.role === 'admin'  && <Button danger onClick={handleClickOpen1}>Delete</Button>}\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n\r\n           \r\n        </div>\r\n        </Card>\r\n    </li>\r\n    \r\n          \r\n    </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ChapterItem;\r\n\r\n\r\n","import React, { useContext } from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport ChapterItem from './ChapterItem';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport {Adsense} from '@ctrl/react-adsense';\r\nimport { AuthCotext, AuthContext } from '../../shared/context/auth-context';\r\n\r\n\r\nimport './ChapterList.css';\r\n\r\nconst ChapterList = props => {\r\n  const auth = useContext(AuthContext);\r\n\r\n    if (props.items.length === 0) {\r\n      return  (\r\n        <div className=\"place-list center\">\r\n            <Card>\r\n              <h2>No Book found !</h2>\r\n              <Button to=\"/\">Bookmark book</Button>\r\n            </Card>\r\n        </div>\r\n   );\r\n    }\r\n    let keywords='Ncert';\r\n    let descriptionKeywords='Ncert';\r\n    {props.items.map(function(item) {\r\n      keywords+=', ';\r\nkeywords+=item.chapterName;\r\ndescriptionKeywords+=', ';\r\ndescriptionKeywords+=item.description;\r\n\r\n})};\r\n    return(\r\n      <React.Fragment>\r\n        <head><script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script></head>\r\n        <h1></h1>\r\n        <text></text>\r\n      <ul className=\"place-list\">\r\n        <text></text>\r\n        <text></text>\r\n       \r\n       \r\n        {props.items.map(chapter => \r\n        <ChapterItem \r\n        key={chapter.id} \r\n        id={chapter._id} \r\n        image={chapter.image} \r\n        title={chapter.chapterNumber} \r\n        description={chapter.description} \r\n        chapterName={chapter.chapterName} \r\n        creatorId={chapter.chapterNumber} \r\n        chapterLink={chapter.chapterLink}\r\n        keywords={keywords}\r\n        descriptionKeywords={descriptionKeywords}\r\n        />)}\r\n    </ul>\r\n   \r\n      \r\n   \r\n    </React.Fragment>);\r\n};\r\n\r\nexport default ChapterList;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);"],"sourceRoot":""}