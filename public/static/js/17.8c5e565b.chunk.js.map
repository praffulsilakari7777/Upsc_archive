{"version":3,"sources":["Books/components/SubjectItem.js","Books/components/SubjectsList.js","Books/pages/Subject.js"],"names":["SubjectItem","props","auth","useContext","AuthContext","userId","role","useHistory","useHttpClient","sendRequest","isLoading","error","clearError","React","useState","open1","setOpen1","handleClose1","confirmDeleteHandler1","a","process","id","window","location","reload","onDelete","Fragment","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","onClick","color","autoFocus","keywords","name","content","className","Card","to","Avatar","image","alt","subjectName","Typography","gutterBottom","variant","chaptersCount","classNo","danger","SubjectsList","items","length","map","item","Subject","key","_id","chapters","Subjects","lodedUsers","setLoadedUsers","classId","useParams","cid","useEffect","responseData","fetchUsers","ErrorModal","onClear","highlightColor","count","height","width"],"mappings":"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","file":"static/js/17.8c5e565b.chunk.js","sourcesContent":["import React, {useContext} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Avatar from '../../shared/components/UIElements/Avatar';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport './ClassItem.css';\r\nimport { AuthCotext, AuthContext } from '../../shared/context/auth-context';\r\nimport Button from '../../shared/components/FormElements/Button';\r\n//import Button1 from '@material-ui/core/Button';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {  useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button1 from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { common } from '@material-ui/core/colors';\r\n\r\nimport {Helmet, HelmetProvider} from 'react-helmet-async';\r\n\r\n\r\nconst SubjectItem = props => {\r\n    const auth = useContext(AuthContext);\r\n    const user = auth.userId;\r\n    const role = auth.role;\r\n\r\n    const history = useHistory();\r\n    \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    \r\n    const [open1, setOpen1] = React.useState(false);\r\n    const handleClickOpen1 = () => {\r\n        setOpen1(true);\r\n      };\r\n    \r\n      const handleClose1 = () => {\r\n        setOpen1(false);\r\n      };\r\n\r\n\r\n      \r\n    \r\n    const confirmDeleteHandler1 =  async () => {\r\n     \r\n        setOpen1(false);\r\n        try {\r\n          await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/books/deleteSubject/${props.id}`, 'DELETE');\r\n          window.location.reload(false);\r\n          props.onDelete(props.id);\r\n\r\n         \r\n         \r\n    \r\n       } catch (err) {}\r\n\r\n   \r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n              <Dialog open={open1} onClose={handleClose1} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Do you want to proceed and delete this place?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n          Please note that it can't be undone thereafter.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button1 onClick={handleClose1} color=\"primary\">\r\n            Disagree\r\n          </Button1>\r\n          <Button1 onClick={confirmDeleteHandler1} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button1>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <HelmetProvider>\r\n        <Helmet>\r\n        <title>Ncert Books | Solutions | PDF Downloads For Free | {props.keywords}</title>\r\n        <meta\r\n          name=\"keywords\"\r\n          content={props.keywords}\r\n                  />\r\n        <meta\r\n          name=\"description\"\r\n          content={props.keywords}\r\n                  />\r\n         </Helmet>\r\n         </HelmetProvider>\r\n\r\n\r\n        <div className=\"user-item\">\r\n        \r\n            <Card className=\"user-item__content\">\r\n            <Link to={`/books/chapters/${props.id}`}>\r\n            <div className=\"user-item__image\">\r\n                <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.subjectName} />\r\n            </div>\r\n            <div className=\"user-item__info\">\r\n           <b> <Typography gutterBottom variant=\"body2\">{props.subjectName}</Typography></b>\r\n            <Typography variant=\"body2\" gutterBottom>{props.chaptersCount} {props.chaptersCount === 1 ? 'Chapter' : 'Chapters'}\r\n            </Typography>\r\n\r\n            </div>\r\n            <div className=\"user-item__imageL\">\r\n                <Avatar image={`https://cdn.iconscout.com/icon/free/png-256/right-arrow-1438234-1216195.png`} alt={props.classNo} />\r\n            </div>\r\n        </Link>\r\n    \r\n        </Card>\r\n       \r\n        </div>\r\n        { auth.role === 'admin'  &&  (<div className=\"user-item1\">\r\n            <Link to={`/books/updatesubject/${props.id}`}><button className=\"button\">Edit</button></Link>\r\n               <button className=\"button\" danger onClick={handleClickOpen1}>Delete</button>\r\n                </div>)}\r\n                </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default SubjectItem;","import React, { useContext } from 'react';\r\nimport AdSense from 'react-adsense';\r\n\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport SubjectItem from './SubjectItem';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport { AuthCotext, AuthContext } from '../../shared/context/auth-context';\r\nimport './ClassList.css';\r\n\r\nconst SubjectsList = props => {\r\n\r\n    const auth = useContext(AuthContext);\r\n    if(props.items.length === 0) {\r\n        return (\r\n            <div className=\"center\">\r\n                <Card>\r\n                <h2>No Subject found.</h2>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    let keywords='Ncert';\r\n    {props.items.map(function(item) {\r\n      keywords+=', ';\r\nkeywords+=item.subjectName;\r\n})};\r\n\r\n    return (\r\n       <React.Fragment>\r\n    <ul className=\"user-list\">\r\n           {props.items.map(Subject => (\r\n           <SubjectItem \r\n           key={Subject.id} \r\n           id={Subject._id} \r\n           subjectName={Subject.subjectName} \r\n           image={Subject.image}\r\n           chaptersCount={Subject.chapters.length} \r\n           keywords={keywords}\r\n           />\r\n           ))}\r\n    </ul>\r\n  \r\n    </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SubjectsList;","import React, { useEffect, useState } from 'react'; \r\nimport { useParams } from 'react-router-dom';\r\nimport SubjectsList from '../components/SubjectsList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\n\r\nconst Subjects = () => {\r\n   const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [lodedUsers, setLoadedUsers] = useState();\r\n\r\n    const classId = useParams().cid;\r\nuseEffect(() => {\r\n    const fetchUsers = async () => {\r\n\r\n   \r\n      try  {  \r\n        const responseData =  await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/books/${classId}`);\r\n\r\n    \r\n      setLoadedUsers(responseData.Subjects);\r\n    } catch(err) {}\r\n    };\r\n    fetchUsers();\r\n    }, [sendRequest]);\r\n\r\nreturn (\r\n    <React.Fragment>\r\n    <ErrorModal error={error} onClear={clearError} />\r\n    {isLoading && (\r\n    // <div className=\"center\">\r\n    //     <LoadingSpinner />\r\n    //     </div>\r\n    <div>\r\n    <SkeletonTheme color=\"#F5F5F5\" highlightColor=\"#E5E5E5\"  >\r\n  <p>\r\n <Skeleton count={20}  height={70} width={\"100%\"}  />\r\n </p>\r\n \r\n</SkeletonTheme>\r\n </div>\r\n        )}\r\n   {!isLoading && lodedUsers && (<SubjectsList items={lodedUsers} />) }\r\n    </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Subjects;"],"sourceRoot":""}