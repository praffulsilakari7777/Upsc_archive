{"version":3,"sources":["Books/pages/Chapter.js"],"names":["Chapters","useState","loadedPlaces","setLoadedPlaces","useHttpClient","isLoading","error","sendRequest","clearError","subjectId","useParams","sid","useEffect","a","process","responseData","fetchPlaces","Fragment","onClear","color","highlightColor","count","height","width","items"],"mappings":"uNA4DeA,UAjDE,WAAO,IAAD,EACqBC,qBADrB,mBACZC,EADY,KACEC,EADF,OAEiCC,cAA7CC,EAFY,EAEZA,UAAWC,EAFC,EAEDA,MAAOC,EAFN,EAEMA,YAAaC,EAFnB,EAEmBA,WAEjCC,EAAYC,cAAYC,IAgBhC,OAdEC,qBAAU,YAES,uCAAG,4BAAAC,EAAA,+EAESN,EAAY,GAAD,OAAIO,8DAAJ,2BAAwDL,IAF5E,OAEZM,EAFY,OAGlBZ,EAAgBY,EAAaf,UAHX,uGAAH,qDAMjBgB,KACC,CAACT,EAAaE,IAMf,kBAAC,IAAMQ,SAAP,KACA,kBAAC,IAAD,CAAYX,MAAOA,EAAOY,QAASV,IACjCH,GAAc,6BAChB,kBAAC,gBAAD,CAAec,MAAM,UAAUC,eAAe,WAC9C,2BACD,kBAAC,IAAD,CAAUC,MAAO,EAAIC,OAAQ,IAAKC,MAAO,SACzC,kBAAC,IAAD,CAAUF,MAAO,EAAIC,OAAQ,GAAIC,MAAO,UAExC,2BACA,kBAAC,IAAD,CAAUF,MAAO,EAAIC,OAAQ,IAAKC,MAAO,SACzC,kBAAC,IAAD,CAAUF,MAAO,EAAIC,OAAQ,GAAIC,MAAO,UAExC,2BACA,kBAAC,IAAD,CAAUF,MAAO,EAAIC,OAAQ,IAAKC,MAAO,SACzC,kBAAC,IAAD,CAAUF,MAAO,EAAIC,OAAQ,GAAIC,MAAO,UAExC,2BACA,kBAAC,IAAD,CAAUF,MAAO,EAAIC,OAAQ,IAAKC,MAAO,SACzC,kBAAC,IAAD,CAAUF,MAAO,EAAIC,OAAQ,GAAIC,MAAO,aAKrClB,GAAaH,GAAgB,kBAAC,IAAD,CAAasB,MAAOtB","file":"static/js/16.efef6ecd.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport ChapterList from '../components/ChapterList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\n\r\nconst Chapters = () => {\r\n    const [loadedPlaces, setLoadedPlaces] = useState();\r\n   const { isLoading, error, sendRequest, clearError} = useHttpClient();\r\n  \r\n   const subjectId = useParams().sid;\r\n\r\n   useEffect(() => {\r\n\r\n     const fetchPlaces = async () => {\r\n     try {\r\n       const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/books/chapters/${subjectId}`);\r\n       setLoadedPlaces(responseData.Chapters);\r\n} catch (err) {}\r\n     };\r\n     fetchPlaces();\r\n   }, [sendRequest, subjectId]);\r\n\r\n  \r\n\r\n\r\n return( \r\n     <React.Fragment>\r\n     <ErrorModal error={error} onClear={clearError} />\r\n     { isLoading && (<div>\r\n     <SkeletonTheme color=\"#F5F5F5\" highlightColor=\"#E5E5E5\"  >\r\n     <p>\r\n    <Skeleton count={1}  height={100} width={\"100%\"}  />\r\n    <Skeleton count={5}  height={30} width={\"100%\"} />\r\n    </p>\r\n    <p>\r\n    <Skeleton count={1}  height={100} width={\"100%\"}  />\r\n    <Skeleton count={5}  height={30} width={\"100%\"} />\r\n    </p>\r\n    <p>\r\n    <Skeleton count={1}  height={100} width={\"100%\"}  />\r\n    <Skeleton count={5}  height={30} width={\"100%\"} />\r\n    </p>\r\n    <p>\r\n    <Skeleton count={1}  height={100} width={\"100%\"}  />\r\n    <Skeleton count={5}  height={30} width={\"100%\"} />\r\n    </p>\r\n    \r\n</SkeletonTheme>\r\n     </div>)}\r\n     {!isLoading && loadedPlaces && <ChapterList items={loadedPlaces} />}\r\n     </React.Fragment>\r\n );\r\n};\r\n\r\nexport default Chapters;"],"sourceRoot":""}