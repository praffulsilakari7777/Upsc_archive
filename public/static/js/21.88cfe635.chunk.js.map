{"version":3,"sources":["Pages/pages/UpdateLink.js"],"names":["UpdateChapter","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedPlace","setLoadedPlace","lId","useParams","lid","history","useHistory","useForm","linkName","value","isValid","linkAddress","formState","inputHandler","setFormData","useEffect","a","process","responseData","Link","heading","blockDescription","fetchPlace","console","log","placeUpdateSubmitHandler","event","preventDefault","JSON","stringify","inputs","pageData","str","Page","title","replace","toLowerCase","url","_id","push","window","location","reload","className","Fragment","onClear","onSubmit","id","element","type","label","validators","VALIDATOR_MINLENGTH","errorText","onInput","initialValue","initialValid"],"mappings":"gQAsJeA,UArIO,WACLC,qBAAWC,KAAxB,IADwB,EAE8BC,cAA9CC,EAFgB,EAEhBA,UAAWC,EAFK,EAELA,MAAOC,EAFF,EAEEA,YAAaC,EAFf,EAEeA,WAFf,EAGcC,qBAHd,mBAGjBC,EAHiB,KAGJC,EAHI,KAIlBC,EAAMC,cAAYC,IAClBC,EAAUC,cALQ,EAQuBC,YAC3C,CACIC,SAAU,CACNC,MAAO,GACPC,SAAS,GAEbC,YAAc,CACVF,MAAO,GACPC,SAAS,KAGjB,GAnBoB,mBAQjBE,EARiB,KAQNC,EARM,KAQQC,EARR,KAsBzBC,qBAAU,YACU,uCAAG,4BAAAC,EAAA,+EAEWnB,EAAY,GAAD,OAAIoB,8BAAJ,uBAAoDf,IAF1E,OAEVgB,EAFU,OAIhBjB,EAAeiB,EAAaC,MAC5BL,EAAY,CACVM,QAAS,CACLX,MAAOS,EAAaC,KAAKX,SACzBE,SAAS,GAEbW,iBAAkB,CACdZ,MAAOS,EAAaC,KAAKR,YACzBD,SAAS,KAGd,GAfe,yGAAH,qDAmBhBY,KACA,CAACzB,EAAaK,EAAKY,IAGrBS,QAAQC,IAAIxB,GAEb,IAAMyB,EAAwB,uCAAG,WAAMC,GAAN,mBAAAV,EAAA,6DAC7BU,EAAMC,iBADuB,kBAGrB9B,EAAY,GAAD,OAAIoB,8BAAJ,6BAA0Df,GAAO,QAAS0B,KAAKC,UAAU,CACxGrB,SAAUI,EAAUkB,OAAOtB,SAASC,MACpCE,YAAaC,EAAUkB,OAAOnB,YAAYF,QAE1C,CACA,eAAgB,qBARS,uBAWNZ,EAAY,GAAD,OAAIoB,8BAAJ,4BAAyDf,IAX9D,OAWvB6B,EAXuB,OAarCC,GADYA,EAAMD,EAASE,KAAKC,OACtBC,QAAQ,OAAQ,KAAKC,cAChBC,EAAIL,EAAI,IAAID,EAASE,KAAKK,IACnCjC,EAAQkC,KAAR,WAAiBF,IACjBG,OAAOC,SAASC,QAAO,GAhBQ,4GAAH,sDAqB9B,OAAG/C,EAEK,yBAAKgD,UAAU,UACb,kBAAC,IAAD,OAML3C,GAAgBJ,EAcrB,kBAAC,IAAMgD,SAAP,KACA,kBAAC,IAAD,CAAYhD,MAAOA,EAAOiD,QAAS/C,KAChCH,GAAaK,GAChB,0BAAM2C,UAAU,aAAaG,SAAUrB,GACtC,kBAAC,IAAD,CACGsB,GAAG,WACHC,QAAQ,QACRC,KAAK,OACLC,MAAM,YACNC,WAAY,CAACC,YAAoB,IACjCC,UAAU,gCACVC,QAASzC,EACT0C,aAAcvD,EAAYQ,SAC1BgD,cAAc,IAGtB,kBAAC,IAAD,CACQT,GAAG,cACHC,QAAQ,GACRC,KAAK,OACLC,MAAM,eACNC,WAAY,CAACC,YAAoB,IACjCC,UAAU,0CACVC,QAASzC,EACT0C,aAAcvD,EAAYW,YAC1B6C,cAAc,IAOhB,kBAAC,IAAD,CAAQP,KAAK,UAAb,kBA5CM,yBAAKN,UAAU,UACX,kBAAC,IAAD,KACR","file":"static/js/21.88cfe635.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './PlaceForm.css';\r\nimport ImageUpload from '../../shared/components/FormElements/imageUpload';\r\nimport ImaUpload from '../../shared/components/FormElements/pdfUpload';\r\n\r\n\r\nconst UpdateChapter = () => {\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [loadedPlace, setLoadedPlace] = useState();\r\n    const lId = useParams().lid;\r\n    const history = useHistory();\r\n\r\n\r\n    const [formState, inputHandler, setFormData] = useForm(\r\n        {\r\n            linkName: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            linkAddress : {\r\n                value: '',\r\n                isValid: false\r\n            }\r\n        },\r\n        false\r\n    );\r\n\r\n   useEffect(() => {\r\n       const fetchPlace = async () => {\r\n           try {\r\n          const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/pages/link/${lId}`);\r\n         \r\n          setLoadedPlace(responseData.Link);\r\n          setFormData({\r\n            heading: {\r\n                value: responseData.Link.linkName,\r\n                isValid: true\r\n            },\r\n            blockDescription: {\r\n                value: responseData.Link.linkAddress,\r\n                isValid: true\r\n            }\r\n\r\n        }, true\r\n        );\r\n           } catch (err) {}\r\n       } \r\n       fetchPlace();\r\n   } , [sendRequest, lId, setFormData]);\r\n   \r\n    \r\n     console.log(loadedPlace);\r\n\r\n    const placeUpdateSubmitHandler = async event => {\r\n        event.preventDefault();\r\n      try {\r\n          await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/pages/updatelink/${lId}`, 'PATCH', JSON.stringify({\r\n            linkName: formState.inputs.linkName.value,\r\n            linkAddress: formState.inputs.linkAddress.value,\r\n            \r\n        }), {\r\n            'Content-Type': 'application/json'\r\n        });\r\n\r\n        const pageData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/pages/urlbylink/${lId}`);\r\n        var str = pageData.Page.title;\r\nstr = str.replace(/\\s+/g, '-').toLowerCase();\r\n         const url=str+'-'+pageData.Page._id;\r\n      history.push(`/${url}`);\r\n      window.location.reload(false);\r\n    } catch (err) {}\r\n    }\r\n\r\n\r\n    if(isLoading) {\r\n        return (\r\n            <div className=\"center\">\r\n              <LoadingSpinner />\r\n            </div>\r\n        );\r\n    }\r\n  \r\n\r\n    if (!loadedPlace && !error) {\r\n        return (\r\n            <div className=\"center\">\r\n                <Card>\r\n        <h2>Could not find block!</h2>\r\n        </Card>\r\n        </div>\r\n\r\n        );\r\n    }\r\n\r\n\r\n\r\n    return (\r\n    <React.Fragment>\r\n    <ErrorModal error={error} onClear={clearError} />\r\n    { !isLoading && loadedPlace && \r\n    <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler} > \r\n     <Input \r\n        id=\"linkName\"\r\n        element=\"input\" \r\n        type=\"text\" \r\n        label=\"Link Name\" \r\n        validators={[VALIDATOR_MINLENGTH(1)]} \r\n        errorText=\"Please enter a valid Heading.\" \r\n        onInput={inputHandler}\r\n        initialValue={loadedPlace.linkName}\r\n        initialValid={true}\r\n        />\r\n\r\n<Input \r\n        id=\"linkAddress\"\r\n        element=\"\" \r\n        type=\"text\" \r\n        label=\"Link Address\" \r\n        validators={[VALIDATOR_MINLENGTH(1)]} \r\n        errorText=\"Please enter a valid block description.\" \r\n        onInput={inputHandler}\r\n        initialValue={loadedPlace.linkAddress}\r\n        initialValid={true}\r\n        />\r\n         \r\n\r\n        {/* <input type=\"file\" name=\"file\" onChange={onChangeHandler}/> */}\r\n\r\n\r\n      <Button type=\"submit\">\r\n          UPDATE BLOCK\r\n      </Button>\r\n    </form>}\r\n    </React.Fragment>\r\n    );\r\n        \r\n};\r\n\r\nexport default UpdateChapter;"],"sourceRoot":""}