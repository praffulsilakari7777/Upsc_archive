{"version":3,"sources":["Categories/pages/createMaterials.js"],"names":["CreateChapter","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","categoryId","useParams","catid","useForm","fileName","value","isValid","materialLink","formState","InputHandler","history","useHistory","chapterSubmitHandler","event","a","preventDefault","console","log","inputs","formData","FormData","append","process","push","window","location","reload","Fragment","onClear","className","onSubmit","asOverlay","id","element","type","label","validators","VALIDATOR_MINLENGTH","errorText","onInput","center","disabled"],"mappings":"mRAsHeA,UApGO,WACLC,qBAAWC,KAAxB,IADwB,EAE8BC,cAA9CC,EAFgB,EAEhBA,UAAWC,EAFK,EAELA,MAAOC,EAFF,EAEEA,YAAaC,EAFf,EAEeA,WACjCC,EAAaC,cAAYC,MAHP,EAKUC,YAC9B,CACIC,SAAU,CACNC,MAAO,GACPC,SAAS,GAEbC,aAAc,CACVF,MAAO,KACPC,SAAS,KAGjB,GAhBoB,mBAKlBE,EALkB,KAKPC,EALO,KAmBtBC,EAAUC,cAiBVC,EAAoB,uCAAG,WAAMC,GAAN,eAAAC,EAAA,6DACzBD,EAAME,iBACVC,QAAQC,IAAIT,EAAUU,QAFO,UAInBC,EAAW,IAAIC,UACZC,OAAO,WAAYb,EAAUU,OAAOd,SAASC,OACtDc,EAASE,OAAO,eAAgBb,EAAUU,OAAOX,aAAaF,OAC9Dc,EAASE,OAAO,WAAYrB,GAPH,SAUhBF,EAAY,GAAD,OAAIwB,8DAAJ,4BAAiE,OAAQH,GAVpE,OAsB7BT,EAAQa,KAAR,qBAA2BvB,IAC3BwB,OAAOC,SAASC,QAAO,GAvBM,4GAAH,sDA+BtB,OACI,kBAAC,IAAMC,SAAP,KACA,kBAAC,IAAD,CAAY9B,MAAOA,EAAO+B,QAAS7B,IACvC,0BAAM8B,UAAU,aAAcC,SAAUlB,GACnChB,GAAa,kBAAC,IAAD,CAAgBmC,WAAS,IACvC,kBAAC,IAAD,CACAC,GAAG,WACHC,QAAQ,QACRC,KAAK,OACLC,MAAM,YACNC,WAAY,CAACC,YAAoB,IACjCC,UAAU,kCACVC,QAAS9B,IAGT,kBAAC,IAAD,CAAW+B,QAAM,EAACR,GAAG,eAAeO,QAAS9B,IAY7C,kBAAC,IAAD,CAAQyB,KAAK,SAASO,UAAWjC,EAAUF,SAA3C","file":"static/js/13.d3f47461.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient }  from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './PlaceForm.css';\r\nimport ImageUpload from '../../shared/components/FormElements/imageUpload';\r\nimport ImaUpload from '../../shared/components/FormElements/pdfUpload';\r\n\r\n//mport { useParams } from 'react-router-dom';\r\n\r\n\r\n\r\nconst CreateChapter = () => {\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const categoryId = useParams().catid;\r\n\r\n   const [formState, InputHandler] =  useForm(\r\n        {\r\n            fileName: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            materialLink: {\r\n                value: null,\r\n                isValid: false\r\n            }\r\n        }, \r\n        false\r\n    );\r\n\r\nconst history = useHistory();\r\n  \r\n\r\n\r\n// const [file, setFile] = useState();\r\n\r\n// const onChangeHandler = async event => {\r\n//     event.preventDefault();\r\n//     let pickedFile;\r\n//     console.log(event.target.files[0]);\r\n//     pickedFile = event.target.files[0];\r\n//     setFile(pickedFile);\r\n\r\n// }\r\n\r\n\r\n\r\nconst chapterSubmitHandler = async event => {\r\n    event.preventDefault();\r\nconsole.log(formState.inputs);\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append('fileName', formState.inputs.fileName.value);\r\n    formData.append('materialLink', formState.inputs.materialLink.value);\r\n    formData.append('category', categoryId);\r\n\r\n\r\n       await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/category/createMaterial`, 'POST', formData);\r\n\r\n\r\n    //    JSON.stringify({\r\n    //     fileName: formState.inputs.fileName.value,\r\n    //     materialLink: formState.inputs.materialLink.value,\r\n    //     category: categoryId\r\n    // }), {\r\n    //     'Content-Type': 'application/json'\r\n    // }\r\n// Redirect the  user to a different page\r\n\r\nhistory.push(`/materials/${categoryId}`);\r\nwindow.location.reload(false);\r\n\r\n} catch (err) {}\r\n   \r\n};\r\n\r\n\r\n\r\n    return(  \r\n        <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n    <form className=\"place-form\"  onSubmit={chapterSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input \r\n        id=\"fileName\"\r\n        element=\"input\" \r\n        type=\"text\" \r\n        label=\"File Name\" \r\n        validators={[VALIDATOR_MINLENGTH(1)]} \r\n        errorText=\"Please enter a valid file Name.\" \r\n        onInput={InputHandler}\r\n        />\r\n\r\n        <ImaUpload center id=\"materialLink\" onInput={InputHandler}/>\r\n        {/* <Input \r\n        id=\"chapterLink\"\r\n        element=\"input\" \r\n        type=\"text\" \r\n        label=\"Chapter Link\" \r\n        validators={[VALIDATOR_MINLENGTH(1)]} \r\n        errorText=\"Please enter a valid Chapter Link.\" \r\n        onInput={InputHandler}\r\n        /> */}\r\n      \r\n\r\n        <Button type=\"submit\" disabled={!formState.isValid}>ADD </Button>\r\n    </form>\r\n    </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default CreateChapter;"],"sourceRoot":""}