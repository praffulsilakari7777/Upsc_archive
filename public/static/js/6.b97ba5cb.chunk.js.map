{"version":3,"sources":["shared/components/UIElements/Card1.js","Categories/components/MaterialsItem.js","Categories/components/MaterialsList.js","Categories/pages/materials.js"],"names":["makeStyles","root","maxWidth","media","height","useStyles","theme","button","margin","spacing","extendedIcon","marginRight","ChapterItem","props","React","useState","open","setOpen","handleClose","open1","setOpen1","handleClose1","useHttpClient","error","isLoading","sendRequest","clearError","auth","useContext","AuthContext","showMap","setShowMap","setUserBooksBoolean","setShowConfirmModal","user","userId","role","console","log","useEffect","a","process","id","JSON","stringify","userBooksHandler","closeMapHandler","confirmDeleteHandler","confirmDeleteHandler1","window","location","reload","onDelete","str","fileName","replace","toLowerCase","url","Fragment","ErrorModal","onClear","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","onClick","color","autoFocus","className","Card","to","Typography","variant","component","Avatar","image","alt","StyledBreadcrumb","withStyles","backgroundColor","palette","grey","alignContent","CenterFocusStrong","fontWeight","typography","fontWeightRegular","boxShadow","shadows","emphasize","Chip","ChapterList","lodedUsers","setLoadedUsers","p","items","length","category","categoryId","responseData","Category","fetchUsers","history","useHistory","Button","handleClick","event","preventDefault","push","info","async","src","Breadcrumbs","aria-label","href","label","categoryName","map","chapter","key","_id","materialLink","Subjects","useParams","catid","Materials","highlightColor","count","width","MaterialsList"],"mappings":"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","file":"static/js/6.b97ba5cb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 445,\r\n  },\r\n  media: {\r\n    height: 240,\r\n  },\r\n});\r\n\r\nconst Card1 = () =>\r\n{\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image=\"https://lh3.googleusercontent.com/proxy/zp5i5fvIGnjh9Pe9_EInJNRCvqmrA-PN82CnyRGwAmKkznsjzGIRbTmOMyZLJhOMhZPyEt_p7lsGwHs2ZNChJcLlK2fVmu4QGFK1ULB5PeTy9HXDHi_HdVJV6G8jFJPe9zHgYyY\"\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Chemistry\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          The NCERT solutions provided here will enhance the concepts of the students, as well as suggest alternative methods to solve particular problems to the teachers. The target is to direct individuals towards problem solving strategies, rather than solving problems in one prescribed format. The links below provide the detailed solutions for all the Class 12 Chemistry problems.\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Card1;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Skeleton from 'react-loading-skeleton';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Card1 from '../../shared/components/UIElements/Card1';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport Modal from '../../shared/components/UIElements/Modal';\r\nimport { AuthCotext, AuthContext } from '../../shared/context/auth-context';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { useAuth } from '../../shared/hooks/auth-hook';\r\n\r\nimport './ChapterItem.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Avatar from '../../shared/components/UIElements/Avatar';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button1 from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { common } from '@material-ui/core/colors';\r\nimport {Helmet, HelmetProvider} from 'react-helmet-async';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\n\r\nconst ChapterItem = props => {\r\n\r\n\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n    const [open1, setOpen1] = React.useState(false);\r\n    const handleClickOpen1 = () => {\r\n        setOpen1(true);\r\n      };\r\n    \r\n      const handleClose1 = () => {\r\n        setOpen1(false);\r\n      };\r\n    \r\n\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n    const [showMap, setShowMap] = useState(false);\r\n    const [UserBooksBoolean, setUserBooksBoolean] = useState(false);\r\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n    const user = auth.userId;\r\n    const role = auth.role;\r\n    console.log(role);\r\n\r\n\r\n\r\n\r\nlet ans;\r\nlet ans1;\r\n    \r\n\r\n   useEffect(() => {\r\n \r\n     if(user) {\r\n    const userBooksHandler = async () => {\r\n    try {\r\n       \r\n      ans =  await sendRequest(process.env.REACT_APP_BACKEND_URL + `/books/user/userbooks/${props.id}`, 'POST', JSON.stringify({\r\n            user: user\r\n    }), \r\n    { 'Content-Type': 'application/json' }\r\n    );\r\n\r\n   if(ans)\r\n    setUserBooksBoolean(true);\r\n    \r\n} catch (err) {}\r\n    };\r\n    userBooksHandler();\r\n}\r\n  }, [sendRequest], user);\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n    const openMapHandler  = async event => {\r\n        event.preventDefault();\r\n      try {\r\n           await sendRequest(process.env.REACT_APP_BACKEND_URL + `/books/createUserBooks/${props.id}`, 'POST', JSON.stringify({\r\n            user: user\r\n    }), \r\n    { 'Content-Type': 'application/json' }\r\n    );\r\n    \r\n    // Redirect the  user to a different page\r\n    setShowMap(true);\r\n\r\n    } catch (err) {}\r\n\r\n\r\n\r\n\r\n        try {\r\n         ans1 =   await sendRequest(process.env.REACT_APP_BACKEND_URL + `/books/user/userbooks/${props.id}`, 'POST', JSON.stringify({\r\n             user: user\r\n     }), \r\n     { 'Content-Type': 'application/json' }\r\n     );\r\n\r\n     if(ans1)\r\n     setUserBooksBoolean(true);\r\n    \r\n    } catch (err) {}\r\n\r\n    \r\n       \r\n    };\r\n\r\n\r\n\r\n    const closeMapHandler = () => setShowMap(false);\r\n    \r\n    const showDeleteWarningHandler = () => {\r\n        setShowConfirmModal(true);\r\n\r\n    };\r\n\r\n    const cancelDeleteHandler = () => {\r\n        setShowConfirmModal(false);\r\n    };\r\n\r\n    const confirmDeleteHandler =  async () => {\r\n        setShowConfirmModal(false);\r\n        setOpen(false);\r\n        try {\r\n             await sendRequest(process.env.REACT_APP_BACKEND_URL + `/books/deleteuserbooks/${props.id}`, 'POST', JSON.stringify({\r\n            user: user\r\n        }), \r\n        { 'Content-Type': 'application/json' }\r\n        );\r\n   \r\n       \r\n        setUserBooksBoolean(false);\r\n        \r\n\r\n       } catch (err) {}\r\n   \r\n    };\r\n\r\n\r\n\r\n    \r\n    const confirmDeleteHandler1 =  async () => {\r\n     \r\n      setOpen1(false);\r\n      try {\r\n        await sendRequest(process.env.REACT_APP_BACKEND_URL + `/books/deleteChapter/${props.id}`, 'DELETE');\r\n        window.location.reload(false);\r\n        props.onDelete(props.id);\r\n \r\n  \r\n     } catch (err) {}\r\n \r\n  };\r\n\r\n//   let Urlkeyword='';\r\n//     {props.items.map(function(item) {\r\n//       Urlkeywords+='-';\r\n// Urlkeywords+=item.chapterName;\r\n// descriptionKeywords+=', ';\r\n// descriptionKeywords+=item.description;\r\n\r\n// })};\r\n\r\nvar str = props.fileName;\r\nstr = str.replace(/\\s+/g, '-').toLowerCase();\r\nconsole.log(str);\r\n\r\nlet url=str+'-'+props.id;\r\n\r\n    return (\r\n    <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        <Dialog open={showMap} onClose={closeMapHandler} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Sucsses\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n          Book Added to Downloads Sucssfully!\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button1 onClick={closeMapHandler} color=\"primary\">\r\n            Close\r\n          </Button1>\r\n        </DialogActions>\r\n      </Dialog>\r\n         {/* <Modal \r\n         show={showMap} \r\n         onCancel={closeMapHandler} \r\n         header={props.address}\r\n         contentClass=\"place-item__modal-content\" \r\n         footerClass=\"place-item__modal-actions\"\r\n         footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n         >\r\n\r\n             <div className=\"map-container\">\r\n                 <h2>Book Added to Downloads Sucssfully!</h2>\r\n             </div>\r\n        </Modal> */}\r\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Do you want to proceed and delete this place?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n          Please note that it can't be undone thereafter.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button1 onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button1>\r\n          <Button1 onClick={confirmDeleteHandler} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button1>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n\r\n      <Dialog open={open1} onClose={handleClose1} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Do you want to proceed and delete this place?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n          Please note that it can't be undone thereafter.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button1 onClick={handleClose1} color=\"primary\">\r\n            Disagree\r\n          </Button1>\r\n          <Button1 onClick={confirmDeleteHandler1} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button1>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n\r\n        {/* <Modal\r\n          show={showConfirmModal}\r\n          onCancel={cancelDeleteHandler}\r\n          header=\"Are You sure?\"\r\n          footerClass=\"place-item__modal-actions\" \r\n          footer={\r\n              <React.Fragment>\r\n                  <Button inverse onClick={cancelDeleteHandler}>CANCEL</Button>\r\n                  <Button danger onClick={confirmDeleteHandler}>DELETE</Button>\r\n              </React.Fragment>\r\n          }\r\n        >\r\n            <p>Do you want to proceed and delete this book?</p>\r\n        </Modal> */}\r\n        <text></text>\r\n        {/* <HelmetProvider>\r\n        <Helmet>\r\n        <title>Ncert Books | Solutions | PDF Downloads For Free | {props.keywords}</title>\r\n        <meta\r\n          name=\"keywords\"\r\n          content={props.keywords}\r\n                  />\r\n        <meta\r\n          name=\"description\"\r\n          content={props.descriptionKeywords}\r\n                  />\r\n         </Helmet>\r\n         </HelmetProvider> */}\r\n    \r\n    \r\n    <div className=\"user-item\">\r\n        \r\n        <Card className=\"user-item__content\">\r\n        <Link to={`/pdfmat/${url}`}>\r\n        <div className=\"user-item__info\">\r\n       {/* <b> <h3><Typography gutterBottom variant=\"body2\">{props.fileName}</Typography></h3></b> */}\r\n       <h1><b><Typography  variant=\"body1\" color=\"textPrimary\" component=\"h3\">{props.fileName}</Typography></b></h1>\r\n        {/* <Typography variant=\"body2\" gutterBottom>{props.filesCount} {props.filesCount === 1 ? 'file' : 'files'} */}\r\n        {/* </Typography> */}\r\n\r\n        </div>\r\n        <div className=\"user-item__imageL\">\r\n            <Avatar image={`https://icons.iconarchive.com/icons/martz90/circle/256/adobe-reader-icon.png`} alt={props.fileName} />\r\n        </div>\r\n    </Link>\r\n\r\n    </Card>\r\n   \r\n    </div>\r\n    {/* { auth.role === 'admin'  &&  (<div className=\"user-item1\">\r\n        <Link to={`/books/updatesubject/${props.id}`}><button className=\"button\">Edit</button></Link>\r\n           <button className=\"button\" danger onClick={handleClickOpen1}>Delete</button>\r\n            </div>)} */}\r\n\r\n    </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ChapterItem;\r\n\r\n\r\n","import React, { useContext, useEffect, useState } from 'react'; \r\nimport { useParams } from 'react-router-dom';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport MaterialItem from './MaterialsItem';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport {Adsense} from '@ctrl/react-adsense';\r\nimport { AuthCotext, AuthContext } from '../../shared/context/auth-context';\r\n\r\n\r\nimport './ChapterList.css';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\nimport { emphasize, withStyles } from '@material-ui/core/styles';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { CenterFocusStrong } from '@material-ui/icons';\r\nimport {  useHistory } from 'react-router-dom';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\n\r\nconst StyledBreadcrumb = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.grey[100],\r\n    height: theme.spacing(4),\r\n    alignContent: CenterFocusStrong,\r\n    color: theme.palette.grey[800],\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    '&:hover, &:focus': {\r\n      backgroundColor: theme.palette.grey[300],\r\n    },\r\n    '&:active': {\r\n      boxShadow: theme.shadows[1],\r\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n    },\r\n  },\r\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\r\n\r\n\r\nconst ChapterList = props => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [lodedUsers, setLoadedUsers] = useState();\r\n  let p=0;\r\nif(props.items.length !== 0){\r\np=props.items[0].category;\r\n}\r\nconst categoryId =p ;\r\n\r\n\r\nuseEffect(() => {\r\n  const fetchUsers = async () => {\r\n\r\n \r\n    try  {  \r\n      const responseData =  await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/category/getcategorybycategoryid/${categoryId}`);\r\nconsole.log(responseData);\r\n  \r\n    setLoadedUsers(responseData.Category);\r\n  } catch(err) {}\r\n  };\r\n  fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n\r\nconsole.log(lodedUsers);\r\n\r\n  const auth = useContext(AuthContext);\r\n  const history = useHistory();\r\n    if (props.items.length === 0) {\r\n      return  (\r\n        <div className=\"place-list center\">\r\n            <Card>\r\n              <h2>No file found !</h2>\r\n              <Button to=\"/\">Bookmark book</Button>\r\n            </Card>\r\n        </div>\r\n   );\r\n    }\r\n//     let keywords='Ncert';\r\n//     let descriptionKeywords='Ncert';\r\n//     {props.items.map(function(item) {\r\n//       keywords+=', ';\r\n// keywords+=item.chapterName;\r\n// descriptionKeywords+=', ';\r\n// descriptionKeywords+=item.description;\r\n\r\n// })};\r\n\r\nfunction handleClick(event) {\r\n  event.preventDefault();\r\n  history.push(`/categories`);\r\n  console.info('You clicked a breadcrumb.');\r\n}\r\n\r\nconsole.log();\r\n    return(\r\n      <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        <head><script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script></head>\r\n        <h1></h1>\r\n        <text></text>\r\n        {lodedUsers && \r\n        <Breadcrumbs aria-label=\"breadcrumb\">\r\n  <StyledBreadcrumb\r\n    component=\"a\"\r\n    href=\"http://localhost:3000/categories\"\r\n    label=\"Categories\"\r\n    // icon={<HomeIcon fontSize=\"small\" />}\r\n    onClick={handleClick}\r\n  />\r\n  <StyledBreadcrumb component=\"a\" href=\"#\" label={`${lodedUsers.categoryName} - files` } onClick={handleClick} />\r\n  {/* <StyledBreadcrumb\r\n    label=\"Accessories\"\r\n    deleteIcon={<ExpandMoreIcon />}\r\n    onClick={handleClick}\r\n    onDelete={handleClick}\r\n  /> */}\r\n</Breadcrumbs>}\r\n      <ul className=\"place-list\">\r\n        <text></text>\r\n        <text></text>\r\n       \r\n       \r\n        {props.items.map(chapter => \r\n        <MaterialItem \r\n        key={chapter.id} \r\n        id={chapter._id} \r\n        fileName={chapter.fileName} \r\n        materialLink={chapter.materialLink} \r\n        category={chapter.category} \r\n        />)}\r\n        \r\n    </ul>\r\n   \r\n      \r\n   \r\n    </React.Fragment>);\r\n};\r\n\r\nexport default ChapterList;","import React, { useEffect, useState } from 'react'; \r\nimport { useParams } from 'react-router-dom';\r\nimport MaterialsList from '../components/MaterialsList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\n\r\nconst Subjects = () => {\r\n   const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [lodedUsers, setLoadedUsers] = useState();\r\n\r\n    const categoryId = useParams().catid;\r\nuseEffect(() => {\r\n    const fetchUsers = async () => {\r\n\r\n   \r\n      try  {  \r\n        const responseData =  await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/category/getmaterialsbycategory/${categoryId}`);\r\n\r\n    \r\n      setLoadedUsers(responseData.Materials);\r\n    } catch(err) {}\r\n    };\r\n    fetchUsers();\r\n    }, [sendRequest]);\r\n\r\nreturn (\r\n    <React.Fragment>\r\n    <ErrorModal error={error} onClear={clearError} />\r\n    {isLoading && (\r\n    // <div className=\"center\">\r\n    //     <LoadingSpinner />\r\n    //     </div>\r\n    <div>\r\n    <SkeletonTheme color=\"#F5F5F5\" highlightColor=\"#E5E5E5\"  >\r\n  <p>\r\n <Skeleton count={20}  height={70} width={\"100%\"}  />\r\n </p>\r\n \r\n</SkeletonTheme>\r\n </div>\r\n        )}\r\n   {!isLoading && lodedUsers && (<MaterialsList items={lodedUsers} />) }\r\n    </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Subjects;"],"sourceRoot":""}