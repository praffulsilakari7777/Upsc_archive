{"version":3,"sources":["Pages/pages/MainPageInfo.js"],"names":["SubjectsList","props","useHttpClient","isLoading","sendRequest","error","clearError","useState","lodedUsers","setLoadedUsers","useEffect","a","process","responseData","Page","fetchUsers","useContext","AuthContext","Fragment","className","key","_id","items"],"mappings":"yOAkGeA,UAnFM,SAAAC,GAAS,MAM4BC,cAA9CC,EANkB,EAMlBA,UAAkBC,GANA,EAMPC,MANO,EAMAD,aANA,KAMaE,WACFC,sBAPX,mBAOnBC,EAPmB,KAOPC,EAPO,KAU9BC,qBAAU,YACU,uCAAG,4BAAAC,EAAA,+EAIaP,EAAY,GAAD,OAAIQ,8DAAJ,kBAP5B,6BAGI,OAITC,EAJS,OAOjBJ,EAAeI,EAAaC,MAPX,uGAAH,qDAUhBC,KACG,CAACX,IAESY,qBAAWC,KAaxB,OACG,kBAAC,IAAMC,SAAP,KAWK,yBAAKC,UAAU,iBAGb,yBAAKA,UAAU,OAEf,yBAAKA,UAAU,+BAEXhB,GAAaK,GAAe,kBAAC,IAAD,CAAcY,IAAKZ,EAAW,GAAGa,IAAKC,MAAOd","file":"static/js/19.b106deeb.chunk.js","sourcesContent":["import React, { useContext,useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport AdSense from 'react-adsense';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport PageInfoList from '../components/PageInfoList';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport { AuthCotext, AuthContext } from '../../shared/context/auth-context';\r\n\r\nimport Footer from '../../web-site/footer';\r\nimport Sidebar from '../../web-site/sidebar';\r\nimport ClassList from '../components/ClassList';\r\nimport {Helmet, HelmetProvider} from 'react-helmet-async';\r\n\r\n\r\nconst SubjectsList = props => {\r\n \r\n//   const p = useParams().pid;\r\n//   const pageId = p.split('-');\r\n//   const PageId=pageId[pageId.length-1];\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [lodedUsers, setLoadedUsers] = useState();\r\n    const PageId = '5fbd2c1057fb9d1dbce6bc61';\r\n\r\nuseEffect(() => {\r\n    const fetchUsers = async () => {\r\n\r\n   \r\n      try  {  \r\n        const responseData =  await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/pages/${PageId}`);\r\n\r\n    \r\n      setLoadedUsers(responseData.Page);\r\n    } catch(err) {}\r\n    };\r\n    fetchUsers();\r\n    }, [sendRequest]);\r\n\r\n    const auth = useContext(AuthContext);\r\n  \r\n\r\n    \r\n// console.log(PageId);\r\n// console.log(lodedUsers);\r\n\r\n//     let keywords='Ncert';\r\n//     {props.items.map(function(item) {\r\n//       keywords+=', ';\r\n// keywords+=item.subjectName;\r\n// })};\r\n\r\n    return (\r\n       <React.Fragment>\r\n                 {/* {!isLoading && lodedUsers &&  <HelmetProvider>\r\n        <Helmet>\r\n        <title>{lodedUsers[0].title}</title>\r\n       \r\n        <meta\r\n          name=\"description\"\r\n          content={lodedUsers[0].metaDescription}\r\n                  />\r\n         </Helmet>\r\n         </HelmetProvider>} */}\r\n            <div className=\"page-section1\">\r\n             {/* <div class=\"container1\"> */}\r\n            \r\n              <div className=\"row\">\r\n              \r\n              <div className=\"row justify-content-center\">\r\n                {/* <div className=\"col-lg-8 py-3\"> */}\r\n                {!isLoading && lodedUsers && (<PageInfoList key={lodedUsers[0]._id} items={lodedUsers} />) }\r\n             \r\n    {/* <ul >\r\n           {props.items.map(Blocks => (\r\n           <BlocksItem \r\n           key={Blocks.id} \r\n           id={Blocks._id} \r\n           heading={Blocks.heading}\r\n           links={Blocks.links} \r\n           linksCount={Blocks.links.length} \r\n/>\r\n           ))}\r\n    </ul> */}\r\n    \r\n   \r\n    {/* <Sidebar /> */}\r\n    {/* </div> */}\r\n    </div>\r\n   \r\n    {/* </div> */}\r\n    </div>\r\n    </div>\r\n  {/* <Footer /> */}\r\n    </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SubjectsList;"],"sourceRoot":""}