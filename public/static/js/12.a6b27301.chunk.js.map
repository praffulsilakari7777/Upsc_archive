{"version":3,"sources":["Categories/pages/createCategories.js"],"names":["CreateClass","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useForm","categoryName","value","isValid","formState","InputHandler","history","useHistory","classSubmitHandler","event","a","preventDefault","FormData","append","inputs","process","JSON","stringify","push","window","location","reload","Fragment","onClear","className","onSubmit","asOverlay","id","element","type","label","validators","VALIDATOR_MINLENGTH","errorText","onInput","disabled"],"mappings":"yQA0EeA,UAzDK,WACHC,qBAAWC,KAAxB,IADsB,EAEgCC,cAA9CC,EAFc,EAEdA,UAAWC,EAFG,EAEHA,MAAOC,EAFJ,EAEIA,YAAaC,EAFjB,EAEiBA,WAFjB,EAIYC,YAC9B,CACIC,aAAc,CACVC,MAAO,GACPC,SAAS,KAGjB,GAXkB,mBAIhBC,EAJgB,KAILC,EAJK,KAcpBC,EAAUC,cAIVC,EAAkB,uCAAG,WAAMC,GAAN,SAAAC,EAAA,6DACvBD,EAAME,iBADiB,UAGN,IAAIC,UACZC,OAAO,eAAgBT,EAAUU,OAAOb,aAAaC,OAJvC,SAKdJ,EAAY,GAAD,OAAIiB,8BAAJ,4BAAiE,OAAQC,KAAKC,UAAU,CAC3GhB,aAAcG,EAAUU,OAAOb,aAAaC,QAC5C,CACA,eAAgB,qBARM,OAY3BI,EAAQY,KAAK,eACbC,OAAOC,SAASC,QAAO,GAbI,4GAAH,sDAkBpB,OACI,kBAAC,IAAMC,SAAP,KACA,kBAAC,IAAD,CAAYzB,MAAOA,EAAO0B,QAASxB,IACvC,0BAAMyB,UAAU,aAAcC,SAAUjB,GACnCZ,GAAa,kBAAC,IAAD,CAAgB8B,WAAS,IACvC,kBAAC,IAAD,CACAC,GAAG,eACHC,QAAQ,QACRC,KAAK,OACLC,MAAM,gBACNC,WAAY,CAACC,YAAoB,IACjCC,UAAU,sCACVC,QAAS7B,IAGT,kBAAC,IAAD,CAAQwB,KAAK,SAASM,UAAW/B,EAAUD,SAA3C","file":"static/js/12.a6b27301.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient }  from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport ImageUpload from '../../shared/components/FormElements/imageUpload';\r\n\r\nimport './PlaceForm.css';\r\n//mport { useParams } from 'react-router-dom';\r\n\r\n\r\n\r\nconst CreateClass = () => {\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n   const [formState, InputHandler] =  useForm(\r\n        {\r\n            categoryName: {\r\n                value: '',\r\n                isValid: false\r\n            }\r\n        }, \r\n        false\r\n    );\r\n\r\nconst history = useHistory();\r\n  \r\n\r\n\r\nconst classSubmitHandler = async event => {\r\n    event.preventDefault();\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append('categoryName', formState.inputs.categoryName.value);\r\n       await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/category/createcategory`, 'POST', JSON.stringify({\r\n     categoryName: formState.inputs.categoryName.value\r\n }), {\r\n     'Content-Type': 'application/json'\r\n });\r\n\r\n// Redirect the  user to a different page\r\nhistory.push('/categories');\r\nwindow.location.reload(false);\r\n} catch (err) {}\r\n   \r\n};\r\n\r\n    return(  \r\n        <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n    <form className=\"place-form\"  onSubmit={classSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input \r\n        id=\"categoryName\"\r\n        element=\"input\" \r\n        type=\"text\" \r\n        label=\"Category Name\" \r\n        validators={[VALIDATOR_MINLENGTH(1)]} \r\n        errorText=\"Please enter a valid Category Name.\" \r\n        onInput={InputHandler}\r\n        />\r\n\r\n        <Button type=\"submit\" disabled={!formState.isValid}>ADD Categories</Button>\r\n    </form>\r\n    </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default CreateClass;"],"sourceRoot":""}