{"version":3,"sources":["Pages/components/BlocksItem.js","Pages/components/BlocksList.js","Pages/pages/Blocks.js"],"names":["SubjectItem","props","auth","useContext","AuthContext","userId","role","useHistory","useHttpClient","sendRequest","isLoading","error","clearError","React","useState","setOpen2","handleClickOpen2","open1","setOpen1","handleClose1","confirmDeleteHandler1","a","process","id","window","location","reload","onDelete","Fragment","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","onClick","color","autoFocus","className","Card","heading","blockDescription","links","map","Links","href","linkAddress","linkName","to","_id","danger","SubjectsList","PageId","items","length","pageId","lodedUsers","setLoadedUsers","useEffect","responseData","Page","fetchUsers","console","log","class","Blocks","BlocksItem","key","linksCount","Subjects","useParams","pid","split","onClear","highlightColor","count","height","width"],"mappings":"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","file":"static/js/14.dea8d3aa.chunk.js","sourcesContent":["import React, {useContext} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Avatar from '../../shared/components/UIElements/Avatar';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport './ClassItem.css';\r\nimport { AuthCotext, AuthContext } from '../../shared/context/auth-context';\r\nimport Button from '../../shared/components/FormElements/Button';\r\n//import Button1 from '@material-ui/core/Button';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {  useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button1 from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { common } from '@material-ui/core/colors';\r\n\r\nimport {Helmet, HelmetProvider} from 'react-helmet-async';\r\n\r\n\r\nconst SubjectItem = props => {\r\n    const auth = useContext(AuthContext);\r\n    const user = auth.userId;\r\n    const role = auth.role;\r\n\r\n    const history = useHistory();\r\n    \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    \r\n\r\n    \r\n    const [open2, setOpen2] = React.useState(false);\r\n    const handleClickOpen2 = () => {\r\n        setOpen2(true);\r\n      };\r\n    \r\n      const handleClose2 = () => {\r\n        setOpen2(false);\r\n      };\r\n\r\n\r\n      \r\n    const [open1, setOpen1] = React.useState(false);\r\n    const handleClickOpen1 = () => {\r\n        setOpen1(true);\r\n      };\r\n    \r\n      const handleClose1 = () => {\r\n        setOpen1(false);\r\n      };\r\n\r\n\r\n      \r\n    \r\n    const confirmDeleteHandler1 =  async () => {\r\n     \r\n        setOpen1(false);\r\n        try {\r\n          await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/books/deleteSubject/${props.id}`, 'DELETE');\r\n          window.location.reload(false);\r\n          props.onDelete(props.id);\r\n\r\n         \r\n         \r\n    \r\n       } catch (err) {}\r\n\r\n   \r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n              <Dialog open={open1} onClose={handleClose1} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Do you want to proceed and delete this place?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n          Please note that it can't be undone thereafter.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button1 onClick={handleClose1} color=\"primary\">\r\n            Disagree\r\n          </Button1>\r\n          <Button1 onClick={confirmDeleteHandler1} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button1>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* <HelmetProvider>\r\n        <Helmet>\r\n        <title>Ncert Books | Solutions | PDF Downloads For Free | {props.keywords}</title>\r\n        <meta\r\n          name=\"keywords\"\r\n          content={props.keywords}\r\n                  />\r\n        <meta\r\n          name=\"description\"\r\n          content={props.keywords}\r\n                  />\r\n         </Helmet>\r\n         </HelmetProvider> */}\r\n\r\n\r\n<div className=\"card-page\">\r\n            <Card >\r\n            {/* <Link to={`/books/chapters/${props.id}`}> */}\r\n            {/* <div className=\"user-item__image\">\r\n                <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.subjectName} />\r\n            </div> */}\r\n            <div >\r\n          <h3>{props.heading}</h3>\r\n          <p>{props.blockDescription}</p>\r\n           {props.links.map(Links => (\r\n             <ul>\r\n               <li> <a href={Links.linkAddress}>{Links.linkName}</a></li>\r\n               { auth.role === 'admin'  &&  (<div className=\"user-item1\">\r\n            <Link to={`/pages/updatelink/${Links._id}`}><button className=\"button\">Edit</button></Link>\r\n               <button className=\"button\" danger onClick={handleClickOpen2}>Delete</button>\r\n                </div>)}\r\n             </ul>\r\n           \r\n          ))}\r\n\r\n            </div>\r\n            {/* <div className=\"user-item__imageL\">\r\n                <Avatar image={`https://cdn.iconscout.com/icon/free/png-256/right-arrow-1438234-1216195.png`} alt={props.classNo} />\r\n            </div> */}\r\n        {/* </Link> */}\r\n    \r\n        </Card>\r\n       </div>\r\n      \r\n        { auth.role === 'admin'  &&  (<div className=\"user-item1\">\r\n            <Link to={`/pages/updateblock/${props.id}`}><button className=\"button\">Edit</button></Link>\r\n            <Link to={`/pages/createlink/${props.id}`}><button className=\"button\">Add Link</button></Link> \r\n               <button className=\"button\" danger onClick={handleClickOpen1}>Delete</button>\r\n                </div>)}\r\n                </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default SubjectItem;","import React, { useContext,useEffect, useState} from 'react';\r\nimport AdSense from 'react-adsense';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport BlocksItem from './BlocksItem';\r\nimport PageInfoList from './PageInfoList';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport { AuthCotext, AuthContext } from '../../shared/context/auth-context';\r\nimport './ClassList.css';\r\nimport Footer from '../../web-site/footer';\r\nimport Sidebar from '../../web-site/sidebar';\r\nimport ClassList from '../components/ClassList';\r\nimport {Helmet, HelmetProvider} from 'react-helmet-async';\r\n\r\n\r\nconst SubjectsList = props => {\r\n  let PageId;\r\n  if(props.items.length!=0)\r\n     PageId=props.items[0].pageId;\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [lodedUsers, setLoadedUsers] = useState();\r\n\r\nuseEffect(() => {\r\n    const fetchUsers = async () => {\r\n\r\n   \r\n      try  {  \r\n        const responseData =  await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/pages/${PageId}`);\r\n\r\n    \r\n      setLoadedUsers(responseData.Page);\r\n    } catch(err) {}\r\n    };\r\n    fetchUsers();\r\n    }, [sendRequest]);\r\n\r\n    const auth = useContext(AuthContext);\r\n    if(props.items.length === 0) {\r\n        return (\r\n            <div className=\"center\">\r\n                <Card>\r\n                <h2>No Subject found.</h2>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\nconsole.log(PageId);\r\nconsole.log(lodedUsers);\r\n\r\n//     let keywords='Ncert';\r\n//     {props.items.map(function(item) {\r\n//       keywords+=', ';\r\n// keywords+=item.subjectName;\r\n// })};\r\n\r\n    return (\r\n       <React.Fragment>\r\n                 {/* {!isLoading && lodedUsers &&  <HelmetProvider>\r\n        <Helmet>\r\n        <title>{lodedUsers[0].title}</title>\r\n       \r\n        <meta\r\n          name=\"description\"\r\n          content={lodedUsers[0].metaDescription}\r\n                  />\r\n         </Helmet>\r\n         </HelmetProvider>} */}\r\n            <div className=\"page-section1\">\r\n             {/* <div class=\"container1\"> */}\r\n            \r\n              <div className=\"row\">\r\n              \r\n              <div class=\"row justify-content-center\">\r\n                {/* <div className=\"col-lg-8 py-3\"> */}\r\n                {/* {!isLoading && lodedUsers && (<PageInfoList items={lodedUsers} />) } */}\r\n             \r\n    <ul >\r\n           {props.items.map(Blocks => (\r\n           <BlocksItem \r\n           key={Blocks.id} \r\n           id={Blocks._id} \r\n           heading={Blocks.heading}\r\n           links={Blocks.links} \r\n           linksCount={Blocks.links.length} \r\n           blockDescription = {Blocks.blockDescription}\r\n/>\r\n           ))}\r\n    </ul>\r\n    \r\n   \r\n    {/* <Sidebar /> */}\r\n    {/* </div> */}\r\n    </div>\r\n   \r\n    {/* </div> */}\r\n    </div>\r\n    </div>\r\n  {/* <Footer /> */}\r\n    </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SubjectsList;","import React, { useEffect, useState } from 'react'; \r\nimport { useParams } from 'react-router-dom';\r\nimport BlocksList from '../components/BlocksList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\n\r\nconst Subjects = () => {\r\n   const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [lodedUsers, setLoadedUsers] = useState();\r\n\r\n    const p = useParams().pid;\r\n    \r\n\r\n    const PageId = p.split('-');\r\n    const pageId=PageId[PageId.length-1];\r\nuseEffect(() => {\r\n    const fetchUsers = async () => {\r\n\r\n   \r\n      try  {  \r\n        const responseData =  await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/pages/blocks/${pageId}`);\r\n\r\n    \r\n      setLoadedUsers(responseData.Blocks);\r\n    } catch(err) {}\r\n    };\r\n    fetchUsers();\r\n    }, [sendRequest]);\r\n\r\nreturn (\r\n    <React.Fragment>\r\n    <ErrorModal error={error} onClear={clearError} />\r\n    {isLoading && (\r\n    // <div className=\"center\">\r\n    //     <LoadingSpinner />\r\n    //     </div>\r\n    <div>\r\n    <SkeletonTheme color=\"#F5F5F5\" highlightColor=\"#E5E5E5\"  >\r\n  <p>\r\n <Skeleton count={20}  height={70} width={\"100%\"}  />\r\n </p>\r\n \r\n</SkeletonTheme>\r\n </div>\r\n        )}\r\n   {!isLoading && lodedUsers && (<BlocksList items={lodedUsers} />) }\r\n    </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Subjects;"],"sourceRoot":""}