{"version":3,"sources":["Books/pages/CreateChapter.js"],"names":["CreateChapter","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","subjectid","useParams","sid","useForm","chapterName","value","isValid","chapterNumber","chapterLink","image","formState","InputHandler","history","useHistory","chapterSubmitHandler","event","a","preventDefault","console","log","inputs","formData","FormData","append","description","process","window","location","reload","push","Fragment","onClear","className","onSubmit","asOverlay","id","element","type","label","validators","VALIDATOR_MINLENGTH","errorText","onInput","center","disabled"],"mappings":"oRA+IeA,UA7HO,WACLC,qBAAWC,KAAxB,IADwB,EAE8BC,cAA9CC,EAFgB,EAEhBA,UAAWC,EAFK,EAELA,MAAOC,EAFF,EAEEA,YAAaC,EAFf,EAEeA,WACjCC,EAAYC,cAAYC,IAHN,EAKUC,YAC9B,CACIC,YAAa,CACTC,MAAO,GACPC,SAAS,GAEbC,cAAe,CACXF,MAAO,GACPC,SAAS,GAEbE,YAAa,CACTH,MAAO,KACPC,SAAS,GAEbG,MAAO,CACHJ,MAAO,KACPC,SAAS,KAGjB,GAxBoB,mBAKlBI,EALkB,KAKPC,EALO,KA2BtBC,EAAUC,cAiBVC,EAAoB,uCAAG,WAAMC,GAAN,eAAAC,EAAA,6DACzBD,EAAME,iBACVC,QAAQC,IAAIT,EAAUU,QAFO,UAInBC,EAAW,IAAIC,UACZC,OAAO,cAAeb,EAAUU,OAAOhB,YAAYC,OAC5DgB,EAASE,OAAO,gBAAiBb,EAAUU,OAAOb,cAAcF,OAChEgB,EAASE,OAAO,QAASb,EAAUU,OAAOX,MAAMJ,OAChDgB,EAASE,OAAO,cAAeb,EAAUU,OAAOZ,YAAYH,OAC5DgB,EAASE,OAAO,cAAeb,EAAUU,OAAOI,YAAYnB,OAC5DgB,EAASE,OAAO,UAAWvB,GAVF,UAahBF,EAAY,GAAD,OAAI2B,8BAAJ,wBAA6D,OAAQJ,GAbhE,QAgB7BK,OAAOC,SAASC,QAAO,GACvBhB,EAAQiB,KAAR,0BAAgC7B,IAjBH,4GAAH,sDAyBtB,OACI,kBAAC,IAAM8B,SAAP,KACA,kBAAC,IAAD,CAAYjC,MAAOA,EAAOkC,QAAShC,IACvC,0BAAMiC,UAAU,aAAcC,SAAUnB,GACnClB,GAAa,kBAAC,IAAD,CAAgBsC,WAAS,IACvC,kBAAC,IAAD,CACAC,GAAG,cACHC,QAAQ,QACRC,KAAK,OACLC,MAAM,eACNC,WAAY,CAACC,YAAoB,IACjCC,UAAU,qCACVC,QAAS/B,IAEP,kBAAC,IAAD,CACFwB,GAAG,gBACHC,QAAQ,QACRC,KAAK,OACLC,MAAM,iBACNC,WAAY,CAACC,YAAoB,IACjCC,UAAU,uCACVC,QAAS/B,IAGjB,kBAAC,IAAD,CACQwB,GAAG,cACHC,QAAQ,QACRC,KAAK,OACLC,MAAM,cACNC,WAAY,CAACC,YAAoB,IACjCC,UAAU,oCACVC,QAAS/B,IAMT,kBAAC,IAAD,CAAagC,QAAM,EAACR,GAAG,QAAQO,QAAS/B,IACxC,kBAAC,IAAD,CAAWgC,QAAM,EAACR,GAAG,cAAcO,QAAS/B,IAY5C,kBAAC,IAAD,CAAQ0B,KAAK,SAASO,UAAWlC,EAAUJ,SAA3C","file":"static/js/7.cbad9931.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient }  from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './PlaceForm.css';\r\nimport ImageUpload from '../../shared/components/FormElements/imageUpload';\r\nimport ImaUpload from '../../shared/components/FormElements/pdfUpload';\r\n\r\n//mport { useParams } from 'react-router-dom';\r\n\r\n\r\n\r\nconst CreateChapter = () => {\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const subjectid = useParams().sid;\r\n\r\n   const [formState, InputHandler] =  useForm(\r\n        {\r\n            chapterName: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            chapterNumber: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            chapterLink: {\r\n                value: null,\r\n                isValid: false\r\n            },\r\n            image: {\r\n                value: null,\r\n                isValid: false\r\n            }\r\n        }, \r\n        false\r\n    );\r\n\r\nconst history = useHistory();\r\n  \r\n\r\n\r\n// const [file, setFile] = useState();\r\n\r\n// const onChangeHandler = async event => {\r\n//     event.preventDefault();\r\n//     let pickedFile;\r\n//     console.log(event.target.files[0]);\r\n//     pickedFile = event.target.files[0];\r\n//     setFile(pickedFile);\r\n\r\n// }\r\n\r\n\r\n\r\nconst chapterSubmitHandler = async event => {\r\n    event.preventDefault();\r\nconsole.log(formState.inputs);\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append('chapterName', formState.inputs.chapterName.value);\r\n    formData.append('chapterNumber', formState.inputs.chapterNumber.value);\r\n    formData.append('image', formState.inputs.image.value);\r\n    formData.append('chapterLink', formState.inputs.chapterLink.value);\r\n    formData.append('description', formState.inputs.description.value);\r\n    formData.append('subject', subjectid);\r\n\r\n\r\n       await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/books/createChapter`, 'POST', formData);\r\n\r\n// Redirect the  user to a different page\r\nwindow.location.reload(false);\r\nhistory.push(`/books/chapters/${subjectid}`);\r\n\r\n} catch (err) {}\r\n   \r\n};\r\n\r\n\r\n\r\n    return(  \r\n        <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n    <form className=\"place-form\"  onSubmit={chapterSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input \r\n        id=\"chapterName\"\r\n        element=\"input\" \r\n        type=\"text\" \r\n        label=\"Chapter Name\" \r\n        validators={[VALIDATOR_MINLENGTH(1)]} \r\n        errorText=\"Please enter a valid Chapter Name.\" \r\n        onInput={InputHandler}\r\n        />\r\n          <Input \r\n        id=\"chapterNumber\"\r\n        element=\"input\" \r\n        type=\"text\" \r\n        label=\"Chapter Number\" \r\n        validators={[VALIDATOR_MINLENGTH(1)]} \r\n        errorText=\"Please enter a valid Chapter Number.\" \r\n        onInput={InputHandler}\r\n        />\r\n\r\n<Input \r\n        id=\"description\"\r\n        element=\"input\" \r\n        type=\"text\" \r\n        label=\"Description\" \r\n        validators={[VALIDATOR_MINLENGTH(1)]} \r\n        errorText=\"Please enter a valid Description.\" \r\n        onInput={InputHandler}\r\n        />\r\n        \r\n\r\n        {/* <input type=\"file\" name=\"file\" onChange={onChangeHandler}/> */}\r\n\r\n        <ImageUpload center id=\"image\" onInput={InputHandler} />\r\n        <ImaUpload center id=\"chapterLink\" onInput={InputHandler}/>\r\n        {/* <Input \r\n        id=\"chapterLink\"\r\n        element=\"input\" \r\n        type=\"text\" \r\n        label=\"Chapter Link\" \r\n        validators={[VALIDATOR_MINLENGTH(1)]} \r\n        errorText=\"Please enter a valid Chapter Link.\" \r\n        onInput={InputHandler}\r\n        /> */}\r\n      \r\n\r\n        <Button type=\"submit\" disabled={!formState.isValid}>ADD CHAPTER</Button>\r\n    </form>\r\n    </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default CreateChapter;"],"sourceRoot":""}